
background.js

// Listen for tab activation(init) - when switching to another existing tab.
chrome.tabs.onActivated.addListener((activeInfo) => {
  chrome.tabs.get(activeInfo.tabId, (tab) => {
    chrome.runtime.sendMessage({ activeTabUrl: tab.url });
  });
});

// Listen for extension init, get the initial active tab URL - when the extension is first open.
chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {
  if (request.message === "getCurrentTabUrl") {
    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {
      sendResponse({ activeTabUrl: tabs[0].url });
    });
    return true; 
  }
});

// Listen for URL changes within a tab - when the tab is refreshed.
chrome.webNavigation.onCommitted.addListener((details) => {
  if (details.frameId === 0) {
    chrome.tabs.get(details.tabId, (tab) => {
      // Exclude devtools internal Chrome pages
      if (!tab.url.startsWith("devtools://")) {
        chrome.runtime.sendMessage({ activeTabUrl: tab.url });
      }
    });
  }
});

// Listen for in-page URL changes - when moving between pages inside the same website.
chrome.webNavigation.onHistoryStateUpdated.addListener((details) => {
  if (details.frameId === 0) { 
    chrome.tabs.get(details.tabId, (tab) => {
      chrome.runtime.sendMessage({ activeTabUrl: tab.url });
    });
  }
});

Component...

ngOnInit(): void {
  // Get the current URL when the extension loads - on extension init. (will fire only once)
  chrome.runtime.sendMessage({ message: "getCurrentTabUrl" }, (response) => {
    console.log("Initial active tab URL:", response.activeTabUrl);
  });

  // Get the current URL when: moving between pages, tab is refreshed, switching to another tab, etc... (will fire many times)
  chrome.runtime.onMessage.addListener((message) => {
  if (message.activeTabUrl) {
    console.log("Active tab URL:", message.activeTabUrl);
  }
});



manifest.json

"side_panel": {
  "default_path": "index.html"
},
"permissions": [
  "tabs",
  "activeTab",
  "webNavigation"
]