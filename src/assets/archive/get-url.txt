
background.js


// Listen to extension init, get the initial active tab URL - when the extension is first open.
chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {
  if (message.type === "CURRENT_TAB_URL") {
    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {
      sendResponse({ type: "CURRENT_TAB_URL", payload: { activeTabUrl: tabs[0].url }} );
    });
    return true; 
  }
});

// Listen to tab activation(init) - when switching to another existing tab.
chrome.tabs.onActivated.addListener((activeInfo) => {
  chrome.tabs.get(activeInfo.tabId, (tab) => {
    chrome.runtime.sendMessage({ type: "CURRENT_TAB_URL", payload: { activeTabUrl: tab.url } });
  });
});

// Listen to URL changes within a tab - when the tab is refreshed.
chrome.webNavigation.onCommitted.addListener((details) => {
  if (details.frameId === 0) {
    chrome.tabs.get(details.tabId, (tab) => {
      // Exclude devtools internal Chrome pages
      if (!tab.url.startsWith("devtools://")) {
        chrome.runtime.sendMessage({ type: "CURRENT_TAB_URL", payload: { activeTabUrl: tab.url } });
      }
    });
  }
});

// Listen to in-page URL changes - when moving between pages inside the same website.
chrome.webNavigation.onHistoryStateUpdated.addListener((details) => {
  if (details.frameId === 0) { 
    chrome.tabs.get(details.tabId, (tab) => {
      chrome.runtime.sendMessage({ type: "CURRENT_TAB_URL", payload: { activeTabUrl: tab.url } });
    });
  }
});

///////////////////////////////////////////////////////////////////////////////////////////////

Service... ChromeUrlService

import { Injectable } from "@angular/core";
import { BehaviorSubject } from 'rxjs';

import { ChromeMessage, MessageType } from "../models";

@Injectable()
export class ChromeUrlService {
  private _url$: BehaviorSubject<string> = new BehaviorSubject<string>("");

  constructor() {
    // Get the current URL when the extension loads - on extension init. (will fire only once)
    chrome.runtime.sendMessage({ type: MessageType.CurrentTabUrl } as ChromeMessage, (response: ChromeMessage) => { 
      if(response.type === MessageType.CurrentTabUrl) {
        this._url$.next(response.payload!['activeTabUrl']);
      }
    });

    // Get the current URL when moving between pages, tab is refreshed, switching to another tab, etc... (will fire many times)
    chrome.runtime.onMessage.addListener((message: ChromeMessage) => {
      if(message.type === MessageType.CurrentTabUrl) {
        if (message.payload!['activeTabUrl']) {
          this._url$.next(message.payload!['activeTabUrl']);
        }
      }
    });
  }

  get url$(): BehaviorSubject<string> {
    return this._url$;
  }
}

///////////////////////////////////////////////////////////////////////////////////////////////

manifest.json

"side_panel": {
  "default_path": "index.html"
},
"permissions": [
  "tabs",
  "activeTab",
  "webNavigation"
]